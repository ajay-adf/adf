{
	"name": "sampledataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_input_emp",
						"type": "DatasetReference"
					},
					"name": "empsrc"
				},
				{
					"dataset": {
						"referenceName": "ds_input_dept",
						"type": "DatasetReference"
					},
					"name": "deptsrc"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_output_emp",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "join1"
				},
				{
					"name": "select2"
				},
				{
					"name": "lookup1"
				},
				{
					"name": "union1"
				},
				{
					"name": "rank1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empno as short,",
				"          empname as string,",
				"          sal as short,",
				"          deptno as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false) ~> empsrc",
				"source(output(",
				"          deptno as integer,",
				"          deptname as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> deptsrc",
				"empsrc select(mapColumn(",
				"          DepartmentNumber = deptno,",
				"          EmployeeNumber = empno,",
				"          EmpName = empname",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1, deptsrc join(DepartmentNumber == deptno,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          EmployeeNumber,",
				"          EmpName,",
				"          DepartmentName = deptname",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2, deptsrc lookup(ERROR_FUNCTION('') == ERROR_FUNCTION(''),",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup1",
				"lookup1, empsrc, deptsrc union(byName: true)~> union1",
				"union1 rank(asc(ERROR_FUNCTION(''), true),",
				"     output({undefined} as long)) ~> rank1",
				"rank1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}